<?php
/**
 * UsersApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  SeaTable\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Account Operations: System admin
 *
 * The official SeaTable API Reference (OpenAPI 3.0).
 *
 * The version of the OpenAPI document: 4.4
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.5.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace SeaTable\Client\Test\Api;

use \SeaTable\Client\Configuration;
use \SeaTable\Client\ApiException;
use \SeaTable\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * UsersApiTest Class Doc Comment
 *
 * @category Class
 * @package  SeaTable\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class UsersApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for addNewUser
     *
     * Add New User.
     *
     */
    public function testAddNewUser()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteUser
     *
     * Delete User.
     *
     */
    public function testDeleteUser()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for disableTwoFactor
     *
     * Disable 2FA.
     *
     */
    public function testDisableTwoFactor()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for enforceTwoFactor
     *
     * Enforce 2FA.
     *
     */
    public function testEnforceTwoFactor()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getUser
     *
     * Get User.
     *
     */
    public function testGetUser()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for importUsers
     *
     * Import users.
     *
     */
    public function testImportUsers()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listAdminUsers
     *
     * List Admin Users.
     *
     */
    public function testListAdminUsers()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listBasesSharedToUser
     *
     * List Bases Shared to User.
     *
     */
    public function testListBasesSharedToUser()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listUserStorageObjects
     *
     * List User's Storage Objects.
     *
     */
    public function testListUserStorageObjects()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listUsers
     *
     * List Users.
     *
     */
    public function testListUsers()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for resetUserPassword
     *
     * Reset User's Password.
     *
     */
    public function testResetUserPassword()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for searchUser
     *
     * Search User / Users.
     *
     */
    public function testSearchUser()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for searchUserByOrgId
     *
     * Search User by Org-ID.
     *
     */
    public function testSearchUserByOrgId()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateAdminRole
     *
     * Update Admin's Role.
     *
     */
    public function testUpdateAdminRole()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateUser
     *
     * Update User.
     *
     */
    public function testUpdateUser()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
