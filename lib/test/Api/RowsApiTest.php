<?php
/**
 * RowsApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  SeaTable\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Base Operations
 *
 * The official SeaTable API Reference (OpenAPI 3.0).
 *
 * The version of the OpenAPI document: 4.4
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.5.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace SeaTable\Client\Test\Api;

use \SeaTable\Client\Configuration;
use \SeaTable\Client\ApiException;
use \SeaTable\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * RowsApiTest Class Doc Comment
 *
 * @category Class
 * @package  SeaTable\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class RowsApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for addRow
     *
     * Add Row.
     *
     */
    public function testAddRow()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for appendRows
     *
     * Append Rows.
     *
     */
    public function testAppendRows()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteRow
     *
     * Delete Row.
     *
     */
    public function testDeleteRow()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteRows
     *
     * Delete Rows.
     *
     */
    public function testDeleteRows()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getRow
     *
     * Get Row.
     *
     */
    public function testGetRow()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listFilteredRows
     *
     * List Filtered Rows.
     *
     */
    public function testListFilteredRows()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listRows
     *
     * List Rows.
     *
     */
    public function testListRows()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for lockRows
     *
     * Lock Rows.
     *
     */
    public function testLockRows()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for querySQL
     *
     * List Rows (with SQL).
     *
     */
    public function testQuerySQL()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for unlockRows
     *
     * Unlock Rows.
     *
     */
    public function testUnlockRows()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateRow
     *
     * Update Row.
     *
     */
    public function testUpdateRow()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateRows
     *
     * Update Rows.
     *
     */
    public function testUpdateRows()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
