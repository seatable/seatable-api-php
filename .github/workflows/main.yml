name: CI/PR

on:
  push:
    branches: [ 'main', 'next' ]
  pull_request:
    branches: [ 'main', 'next' ]

jobs:
  php-70:
    runs-on: "ubuntu-latest"
    name: "PHP 7.0 Compatibility"
    steps:
      - uses: "actions/checkout@v2"
      - run: 'grep ''"php": ">=7.0"'' composer.json'
      - uses: "shivammathur/setup-php@v2"
        with:
          php-version: "7.0"
          tools: composer:v2
      - name: "Lock and Install Dependencies"
        run: |
          composer update --no-dev --no-plugins --no-scripts --no-progress --prefer-dist --ignore-platform-reqs
          composer install --no-dev --no-plugins --no-scripts --no-progress --prefer-dist
      - name: "Lint and Load"
        run: composer lint-and-load

  composer:
    name: "Composer (PHP: ${{ matrix.php-version || 'default' }})"
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        php-version: [ '7.4' ]
        include: [ {php-version: '', allow-failure: true} ]

    steps:
      - uses: "actions/checkout@v2"
        with:
          fetch-depth: 0
      - uses: "shivammathur/setup-php@v2"
        if: ${{ matrix.php-version }}
        with:
          php-version: "${{ matrix.php-version }}"
          tools: composer:v2
      - name: Run composer
        shell: bash
        run: |
          #${{ github.run_id }} ${{ matrix.allow-failure && '(allow failures)' }}
          core_startGroup() { printf "::group::%s\n" "$1"; }
          core_endGroup() { printf "::endgroup::\n"; }
          core_exec() { printf "\e[34m"; printf "%q " "$@"; printf "\e[0m\n"; "$@"; }
          core_startGroup 'Getting PHP and Composer version info'
            core_exec "$(command -v php)" --version
            core_exec "$(command -v composer)" --version
            core_exec "$(command -v composer)" config --global home
          core_endGroup
          (( set -x
            composer test ${{ matrix.allow-failure && '|| : allow-failure' }}
          ) 2> >(sed -u -e 's/^/[err] /' >&2)) 2>&1
